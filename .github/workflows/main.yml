name: test

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop
      - rc-*
      - hotfix-*

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      codepush-deployment: ${{ steps.codepush-validation.outputs.codepush_deployment }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          
      - env:
          APP_VERSION: ${{ secrets.APP_VERSION }}
          IS_HOTFIX: ${{ 'false' == 'true' && '~' || '' }}
        run: echo ${{ env.IS_HOTFIX }}${{ env.APP_VERSION }}

      - run: echo "build"

      - name: CodePush Validation
        id: codepush-validation
        uses: ./.github/github-actions/codepush-validation
        with: 
          before_commit_sha: ${{ github.event_name == 'pull_request' && github.event.pull_request.base.sha || github.event_name == 'push' && github.event.before }}
          after_commit_sha: ${{ github.sha }}
          package_json_path: projects/mobile/package.json
          android_path: projects/mobile/android/
          ios_path: projects/mobile/ios/
          yarn_lock_path: projects/mobile/yarn.lock

      - name: Increase Minor Version
        if: startsWith(github.head_ref, 'rc-')
        run: yarn version --minor --no-git-tag-version --no-commit-hooks

      - name: Increase Patch Version
        if: startsWith(github.head_ref, 'hotfix-')
        run: yarn version --patch --no-git-tag-version --no-commit-hooks

  unit-tests:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - run: echo "unit-tests"

  security-tests:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - run: echo "security-tests"

  lint-tests:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - run: echo "security-tests"

  static-analysis:
    runs-on: ubuntu-latest
    needs: unit-tests
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - run: echo "static-analysis"

  e2e-mobile:
    runs-on: ubuntu-latest
    needs: [build, unit-tests, security-tests, lint-tests, static-analysis]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - run: echo "e2e-mobile"

  deploy_testflight:
    runs-on: ubuntu-latest
    needs: [build, e2e-mobile]
    if: (startsWith(github.head_ref, 'rc-') || startsWith(github.head_ref, 'hotfix-')) && needs.build.outputs.codepush-deployment == 'false'
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - run: echo "deploy_testflight"

  deploy_playstore:
    runs-on: ubuntu-latest
    needs: [build, e2e-mobile]
    if: (startsWith(github.head_ref, 'rc-') || startsWith(github.head_ref, 'hotfix-')) && needs.build.outputs.codepush-deployment == 'false'
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - run: echo "deploy_playstore"

  deploy_codepush:
    runs-on: ubuntu-latest
    needs: [build, e2e-mobile]
    if: (startsWith(github.head_ref, 'rc-') || startsWith(github.head_ref, 'hotfix-') || github.ref == 'refs/heads/develop') && needs.build.outputs.codepush-deployment == 'true'
    strategy:
      fail-fast: true
      matrix:
        os: [android, ios]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - if: github.ref == 'refs/heads/main'
        run: echo "Prod"

      - if: startsWith(github.head_ref, 'rc-') || startsWith(github.head_ref, 'hotfix-')
        run: echo "Staging"

      - run: echo "deploy_codepush ${{ matrix.os }}"

  github-release:
    runs-on: ubuntu-latest
    needs: [deploy_testflight, deploy_playstore, deploy_codepush]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get Project Version
        working-directory: ./projects/mobile/
        run: echo "PROJECT_VERSION=$(cat package.json | grep version| cut -d ':' -f2 | sed 's/\"//g' | sed 's/,//g')" >> $GITHUB_ENV

      - uses: ncipollo/release-action@v1
        with:
          tag: v${{ env.PROJECT_VERSION }}
          omitBody: true
          token: ${{ secrets.ACCESS_TOKEN }}
