name: Continuous Integration/Delivery

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  continuous-integration:
    runs-on: ubuntu-latest
    name: Continuous Integration
    steps:
      - run: echo "Build & Test Common"

  build-dev-native-android:
    runs-on: ubuntu-latest
    name: Build Dev / Native Android
    steps:
      - run: echo "Build Dev / Native Android"

  build-dev-native-ios:
    runs-on: ubuntu-latest
    name: Build Dev / Native iOS
    steps:
      - run: echo "Build Dev / Native iOS"

  build-release-native-android:
    if: always() && (github.base_ref == 'master' && (startsWith(github.head_ref, 'rc-') || startsWith(github.head_ref, 'hotfix-')))
    runs-on: ubuntu-latest
    name: Build Release / Native Android
    steps:
      - run: echo "Build Release / Native Android"

  build-release-native-ios:
    if: always() && (github.base_ref == 'master' && (startsWith(github.head_ref, 'rc-') || startsWith(github.head_ref, 'hotfix-')))
    runs-on: ubuntu-latest
    name: Build Release / Native iOS
    steps:
      - run: echo "Build Release / Native iOS"

  deploy-sauce-labs:
    needs: [continuous-integration, build-dev-native-android, build-dev-native-ios]
    runs-on: ubuntu-latest
    name: Sauce Labs Deployment
    strategy:
      matrix: 
        platform: [android, ios]
    steps:
      - run: echo "Sauce Labs Deployment ${{ matrix.platform }}"

  deploy-firebase:
    needs: [continuous-integration, build-dev-native-android, build-dev-native-ios]
    runs-on: ubuntu-latest
    name: Firebase Deployment
    strategy:
      matrix: 
        platform: [android, ios]
    steps:
      - run: echo "Firebase Deployment ${{ matrix.platform }}"

  deploy-testflight:
    needs: [continuous-integration, build-release-native-android, build-release-native-ios]
    runs-on: ubuntu-latest
    name: TestFlight Deployment
    steps:
      - run: echo "TestFlight Deployment"

  deploy-google-play-console:
    needs: [continuous-integration, build-release-native-android, build-release-native-ios]
    runs-on: ubuntu-latest
    name: Google Play Console Deployment
    steps:
      - run: echo "Google Play Console Deployment"

  deploy-amazon-appstore:
    needs: [continuous-integration, build-release-native-android, build-release-native-ios]
    runs-on: ubuntu-latest
    name: Amazon AppStore Deployment
    steps:
      - run: echo "Amazon AppStore Deployment"

  deploy-debug-symbols:
    needs: [continuous-integration, build-release-native-android, build-release-native-ios]
    runs-on: ubuntu-latest
    name: DSYM  Deployment
    steps:
      - run: echo "DSYM Deployment"

  end-to-end-execution:
    needs: [deploy-sauce-labs]
    runs-on: ubuntu-latest
    name: End-to-End Execution
    strategy:
      matrix:
        platform: 
          - android
          - ios
    steps:
      - run: echo "End-to-end execution"
      
  slack-notification:
    needs: [end-to-end-execution, deploy-sauce-labs,deploy-firebase, deploy-testflight, deploy-google-play-console, deploy-amazon-appstore, deploy-debug-symbols]
    runs-on: ubuntu-latest
    name: Slack Notification
    steps:
      - run: echo "Slack Notification"

      - name: Create Context Json file
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo $GITHUB_CONTEXT >> github.json

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          path: ./github.json
          name: main-workflow
