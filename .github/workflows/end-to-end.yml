name: UI Tests Execution

run-name: ${{ (github.event_name == 'workflow_dispatch' && format('Manual Execution by @{0}', github.actor)) || (github.event_name == 'schedule' && 'Nightly Execution') }}

on:
  workflow_dispatch:
    inputs:
      trigger-ucms-tests:
        description: 'Run the uCMS automated tests.'
        required: false
        default: 'none'
        type: choice
        options:
          - none
          - staging
          - production
      filter-by-text:
        description: 'Filter by text (e.g. "@smoke")'
        required: false
        default: ''
        type: string
      filter-by-spec:
        description: 'Filter by spec (e.g. "setup")'
        required: false
        default: ''
        type: string
      ios-version:
        description: 'iOS Version'
        required: false
        type: string
      ios-device-name:
        description: 'iOS Device Name'
        required: false
        type: string
      android-version:
        description: 'Android Version'
        required: false
        type: string
      android-device-name:
        description: 'Android Device Name'
        required: false
        type: string
      app-version:
        description: 'App Version'
        required: false
        type: string
      app-build-number:
        description: 'App Build Number'
        required: false
        type: string
      build-description:
        description: 'Build Description'
        required: false
        type: string
  schedule:
    - cron:  '0 2 * * *'

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.triggering_actor }}

defaults:
  run:
    working-directory: projects/mobile/__tests__/ui

jobs:
  ui-test-execution:
    runs-on: ${{ vars.LINUX_RUNNER }}
    permissions: {}
    name: Execute ${{ matrix.platform }} platform
    strategy:
      matrix:
        platform: [ios, android]
      fail-fast: false
    steps:
    - uses: actions/checkout@v3
      with:
        sparse-checkout: |
          projects/mobile/__tests__/ui
          security
        sparse-checkout-cone-mode: false

    - uses: actions/setup-node@v3
      with:
        node-version: ${{ vars.NODE_VERSION }}

    - run: |
        echo ${{ github.event_name == 'schedule' && 'refs/heads/develop' || inputs.build-description }}

    - uses: ALJAZEERAPLUS/sauce-labs-storage-action@main
      id: sauce-storage
      with:
        endpoint-action: get-file-id
        sauce-labs-username: ${{ secrets.SAUCE_USERNAME }}
        sauce-labs-access-key: ${{ secrets.SAUCE_ACCESS_KEY }}
        get-file-id-platform: ${{ matrix.platform }}
        get-file-id-app-version: ${{ inputs.app-version != '' && inputs.app-version || '' }}
        get-file-id-app-build-number: ${{ inputs.app-build-number != '' && inputs.app-build-number || '' }}
        get-file-id-app-description: ${{ github.event_name == 'schedule' && 'refs/heads/develop' || inputs.build-description }}

    - run: yarn install

    - name: Dispatch uCMS Tests
      if: inputs.trigger-ucms-tests != 'none'
      uses: peter-evans/repository-dispatch@v2
      with:
        token: ${{ secrets.ACCESS_TOKEN }}
        event-type: ${{ inputs.trigger-ucms-tests == 'production' && 'start-production-ucms-tests-workflow' || 'start-staging-ucms-tests-workflow' }}

    - name: Run E2E Tests
      env:
        SAUCE_USERNAME: ${{ secrets.SAUCE_USERNAME }}
        SAUCE_ACCESS_KEY: ${{ secrets.SAUCE_ACCESS_KEY }}
        RP_TOKEN: ${{ secrets.RP_TOKEN }}
        RP_GITHUB_ACTOR: ${{ github.actor }}
        BRANCH_NAME: ${{ github.ref }}
        APPIUM_VERSION: ${{ vars.APPIUM_VERSION }}
        REMOTE_DEVICE_NAME: ${{ matrix.platform == 'ios' && (inputs.ios-device-name != '' && inputs.ios-device-name || vars.IOS_DEVICE_NAME) || (inputs.android-device-name != '' && inputs.android-device-name || vars.ANDROID_DEVICE_NAME) }}
        REMOTE_PLATFORM_VERSION: ${{ matrix.platform == 'ios' && (inputs.ios-version != '' && inputs.ios-version || vars.IOS_PLATFORM_VERSION) || (inputs.android-version != '' && inputs.android-version || vars.ANDROID_PLATFORM_VERSION) }}
        REMOTE_PLATFORM_NAME: ${{ matrix.platform }}
        REMOTE_APP_FILE_ID: ${{ steps.sauce-storage.outputs.file-id }}
      run: |
        yarn run remote:rdc:test \
        ${{ (inputs.filter-by-text != '') && format('--mochaOpts.grep="{0}"', inputs.filter-by-text) }} \
        ${{ (inputs.filter-by-spec != '') && format('--spec ="{0}"', inputs.filter-by-spec) }}  
