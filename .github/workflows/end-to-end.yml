name: End-to-End Workflow

on:
  workflow_dispatch:
    inputs:
      filter-by-text:
        description: 'Filter by text (e.g. "@smoke")'
        required: false
        default: ''
        type: string
      filter-by-spec:
        description: 'Filter by spec (e.g. "setup")'
        required: false
        default: ''
        type: string
      ios-version:
        description: 'iOS Version'
        required: false
        type: string
      ios-device-name:
        description: 'Device Name'
        required: false
        type: string
      android-version:
        description: 'Android Version'
        required: false
        type: string
      android-device-name:
        description: 'Device Name'
        required: false
        type: string
      app-version:
        description: 'App Version'
        required: false
        type: string
      app-build-number:
        description: 'App Build Number'
        required: false
        type: string
      build-description:
        description: 'Build Description'
        required: false
        type: string
        default: 'refs/heads/develop'
      app-file-id:
        description: 'App File ID'
        required: false
        type: string
  schedule:
    - cron:  '0 2 * * *' 
  repository_dispatch:
    types: [start-end-to-end-workflow-ignore]

concurrency:
  group: ${{ github.workflow }}

defaults:
  run:
    working-directory: projects/mobile/__tests__/ui

jobs:
  end-to-end-execution:
    runs-on: ubuntu-latest
    name: |
      ${{ (github.event_name == 'workflow_dispatch' && 'Manual') || (github.event_name == 'schedule' && 'Schedule') }} Execution
    strategy:
      matrix:
        platform: [ios, android]
      fail-fast: false
    steps:
    - uses: actions/checkout@v3
      with:
        sparse-checkout: |
          projects/mobile/__tests__/ui
          security
        sparse-checkout-cone-mode: false

    - run: |
        echo "Current path: $PWD"
        echo "Current files: $(ls -la)"
        echo "Is the security folder available? $(ls -la ${{ github.workspace }})"

    - uses: actions/setup-node@v3
      with:
        node-version: ${{ vars.NODE_VERSION }}

    # - uses: ALJAZEERAPLUS/github-actions/open-vpn@master
    #   id: connect_vpn
    #   with:
    #     ca-crt: "${{ secrets.CA_CRT}}"
    #     user-crt: "${{ secrets.USER_CRT }}"
    #     user-key: "${{ secrets.USER_KEY }}"
    #     tls-key: "${{ secrets.TLS_KEY }}"
    #     ping-url: 192.0.66.2
    #     opvn-config-file: "${{ github.workspace }}/security/aj.ovpn"

    - uses: ALJAZEERAPLUS/sauce-labs-storage-action@main
      id: sauce-storage
      with:
        endpoint-action: get-file-id
        sauce-labs-username: ${{ secrets.SAUCE_USERNAME }}
        sauce-labs-access-key: ${{ secrets.SAUCE_ACCESS_KEY }}
        get-file-id-platform: ${{ matrix.platform }}
        get-file-id-description: 'refs/heads/develop'

    - name: Install dependencies
      run: yarn install

    - name: Run E2E Tests
      env:
        SAUCE_USERNAME: ${{ secrets.SAUCE_USERNAME }}
        SAUCE_ACCESS_KEY: ${{ secrets.SAUCE_ACCESS_KEY }}
        RP_TOKEN: ${{ secrets.RP_TOKEN }}
        RP_GITHUB_ACTOR: ${{ github.actor }}
        BRANCH_NAME: ${{ github.ref }}
        APPIUM_VERSION: ${{ vars.APPIUM_VERSION }}
        REMOTE_DEVICE_NAME: ${{ matrix.platform == 'ios' && vars.IOS_DEVICE_NAME || vars.ANDROID_DEVICE_NAME }}
        REMOTE_PLATFORM_VERSION: ${{ matrix.platform == 'ios' && vars.IOS_PLATFORM_VERSION || vars.ANDROID_PLATFORM_VERSION }}
        REMOTE_PLATFORM_NAME: ${{ matrix.platform }}
        REMOTE_APP_FILE_ID: ${{ steps.sauce-storage.outputs.file-id }}
      run: |
        yarn run remote:rdc:test 
